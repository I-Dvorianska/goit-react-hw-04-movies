{"version":3,"sources":["MovieList/MovieList.js","MovieList/MovieList.module.css","HomePage/HomePage.js"],"names":["SearchMovieList","list","location","useLocation","map","movie","className","style","movieItem","to","pathname","id","state","from","name","title","module","exports","HomePage","useState","moviesList","setMoviesList","useEffect","fetchTrendingMovies","then","res","results"],"mappings":"yIAAA,4EAIe,SAASA,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAClCC,EAAWC,cAEjB,OACE,6BACGF,IAAS,IACRA,EAAKG,KAAI,SAAAC,GAAK,OACZ,oBAAIC,UAAWC,IAAMC,UAArB,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaL,EAAMM,IAC3BC,MAAO,CAAEC,KAAMX,IAHnB,SAMGG,EAAMS,KAAOT,EAAMS,KAAOT,EAAMU,SAPAV,EAAMM,W,mBCVrDK,EAAOC,QAAU,CAAC,UAAY,+B,yHCGf,SAASC,IACtB,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,qBAAU,WACRC,cAAsBC,MAAK,SAAAC,GACzBJ,EAAcI,EAAIC,cAEnB,IAEI,mCAAGN,GAAc,cAAC,IAAD,CAAWnB,KAAMmB","file":"static/js/6.1b1cea88.chunk.js","sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport style from './MovieList.module.css';\r\n\r\nexport default function SearchMovieList({ list }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul>\r\n      {list !== [] &&\r\n        list.map(movie => (\r\n          <li className={style.movieItem} key={movie.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: { from: location },\r\n              }}\r\n            >\r\n              {movie.name ? movie.name : movie.title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nSearchMovieList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieItem\":\"MovieList_movieItem__2YV2P\"};","import { useEffect, useState } from 'react';\r\nimport { fetchTrendingMovies } from 'Api/apiService';\r\nimport MovieList from '../MovieList/MovieList';\r\n\r\nexport default function HomePage() {\r\n  const [moviesList, setMoviesList] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchTrendingMovies().then(res => {\r\n      setMoviesList(res.results);\r\n    });\r\n  }, []);\r\n\r\n  return <>{moviesList && <MovieList list={moviesList} />}</>;\r\n}\r\n"],"sourceRoot":""}